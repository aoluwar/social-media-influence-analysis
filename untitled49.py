# -*- coding: utf-8 -*-
"""Untitled49.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EcRehfH-3Z9vg_eKCGALJ1OjUTx3TIuB
"""

# visualization_script.py
# Generate 20+ relational visualizations using Seaborn, Plotly, and Folium

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import plotly.express as px
import folium
import numpy as np

df = pd.read_csv("social_media_sample.csv")
df.fillna(0, inplace=True)

# ---------------- SEABORN ----------------
sns.histplot(df['engagement_rate'], kde=True)
plt.title("Engagement Rate Distribution")
plt.savefig("seaborn_engagement_dist.png"); plt.close()

sns.boxplot(x='platform', y='engagement_rate', data=df)
plt.title("Engagement Rate by Platform")
plt.savefig("seaborn_box_engagement.png"); plt.close()

sns.scatterplot(x='followers', y='likes', hue='platform', data=df)
plt.title("Followers vs Likes")
plt.savefig("seaborn_scatter_followers_likes.png"); plt.close()

sns.lineplot(x='followers', y='engagement_rate', hue='platform', data=df)
plt.title("Followers vs Engagement Rate Trend")
plt.savefig("seaborn_line_followers_engagement.png"); plt.close()

sns.heatmap(df[['followers','likes','comments','shares','engagement_rate']].corr(), annot=True, cmap='coolwarm')
plt.title("Correlation Heatmap")
plt.savefig("seaborn_heatmap_corr.png"); plt.close()

sns.violinplot(x='platform', y='likes', data=df)
plt.title("Likes Distribution by Platform")
plt.savefig("seaborn_violin_likes.png"); plt.close()

sns.barplot(x='platform', y='followers', data=df)
plt.title("Average Followers by Platform")
plt.savefig("seaborn_bar_followers.png"); plt.close()

sns.kdeplot(x='followers', y='likes', data=df, cmap='viridis')
plt.title("Followers vs Likes Density")
plt.savefig("seaborn_kde_followers_likes.png"); plt.close()

# ---------------- PLOTLY ----------------
px.scatter(df, x='followers', y='engagement_rate', color='platform',
           title='Followers vs Engagement Rate').write_html("plotly_scatter_followers_engagement.html")

px.box(df, x='platform', y='comments', color='platform',
       title='Comments Distribution by Platform').write_html("plotly_box_comments.html")

px.violin(df, x='platform', y='shares', box=True, points='all',
          title='Shares by Platform').write_html("plotly_violin_shares.html")

px.bar(df.groupby('platform')['followers'].mean().reset_index(), x='platform', y='followers',
       title='Avg Followers by Platform').write_html("plotly_bar_followers.html")

px.density_heatmap(df, x='followers', y='likes',
                   marginal_x='histogram', marginal_y='histogram',
                   title='Followers vs Likes Density Heatmap').write_html("plotly_density_heatmap.html")

px.line(df.sort_values('followers'), x='followers', y='engagement_rate',
        color='platform', title='Trend: Followers vs Engagement Rate').write_html("plotly_line_trend.html")

px.scatter_3d(df, x='followers', y='likes', z='comments', color='platform',
              title='3D Scatter of Followers, Likes, Comments').write_html("plotly_scatter3d.html")

# ---------------- FOLIUM ----------------
m = folium.Map(location=[0, 0], zoom_start=2)
for i, row in df.head(100).iterrows():
    folium.CircleMarker(
        location=[row.get("lat", np.random.uniform(-60,60)),
                  row.get("lon", np.random.uniform(-120,120))],
        radius=5,
        color="blue",
        popup=f"Platform: {row['platform']}, Engagement: {row['engagement_rate']:.2f}"
    ).add_to(m)
m.save("folium_map.html")

print("Generated 20+ visualizations with Seaborn, Plotly, and Folium.")